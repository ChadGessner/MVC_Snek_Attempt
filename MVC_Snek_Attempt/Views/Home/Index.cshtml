@model List<List<int>>
@using MVC_Snek_Attempt.Data
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <div id="snekEndpoint" class="visually-hidden">@ViewBag.Snek</div>
    <div id="directionEndpoint" class="visually-hidden">@ViewBag.Direction</div>
    <div id="scoreEndpoint" class="visually-hidden">@ViewBag.Score</div>
    <div id="statusEndpoint" class="visually-hidden">@ViewBag.gameStatus</div>

    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
    <h4 id="score"></h4>
</div>

        @Html.RenderPartialAsync("_gridPartial", false)
<div id="grid" >
    
</div>

@section Scripts {
    <script type="text/javascript">
        const grid = document.getElementById('grid');
        const baseUrl = window.location.origin;
        const snekEndpointRouteData = document.getElementById('snekEndpoint').innerHTML;
        const directionEndpointRouteData = document.getElementById('directionEndpoint').innerHTML;
        const scoreEndpointRouteData = document.getElementById('scoreEndpoint').innerHTML;
        const gameStatusEndpointRouteData = document.getElementById('statusEndpoint').innerHTML;


        const snekUrl = baseUrl + '/api/Snek/' + snekEndpointRouteData + '/';
        const directionUrl = baseUrl + '/api/Snek/' + directionEndpointRouteData + '/';
        const scoreUrl = baseUrl + '/api/Snek/' + scoreEndpointRouteData + '/';
        const statusUrl = baseUrl + '/api/Skek/' + gameStatusEndpointRouteData + '/';

        const score = document.getElementById('score');
        

        const onKeyPress = (e) => {
            const keyCode = e.keyCode;
            let data;
            fetch(directionUrl, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({

                    keyCode: keyCode
                })

            }).then((response) => {
                
                return response.json();
            }).then(json => data = json)
            .catch(err => console.log(err));

            return data;
        }
        document.addEventListener(
            'keydown', (e)=>{
                onKeyPress(e);
            
            });

        const gameInterval = setInterval((e)=>{ // interval root method
            
            getScore();
            snekEndpoint(); // hits both snek and grid endpoint
        }, 200);
        const snekEndpoint = async () => {
            
            const result = await fetch(snekUrl).then((res) => {
                const json = res.json();
                
                return json;
            }).then(json => renderGrid(json))
            .catch(err => console.log(err));
            
            return result;
        }

        const renderGrid = async (newGrid) => {
            grid.innerHTML = null;
            
            for(let y = 0; y < newGrid.length; y++){
                const row = document.createElement('div');
                
                row.classList.add('gameRow');
                for(let x = 0; x < newGrid.length; x++){
                    const col = document.createElement('div');
                    let add = '';
                    if(newGrid[y][x] === 0) {
                        add = 'gameCol';
                        
                    }else if(newGrid[y][x] == 1){
                        add = 'snek';
                        
                    }else if(newGrid[y][x] == 3){
                        add = 'wall'
                        
                    }else{
                        add = 'apple'
                    }
                    
                    col.classList.add(add);
                    row.appendChild(col);
                }
                grid.appendChild(row);
            }
        }

        //const getGameStatus = () => {
        //    return fetch(statusUrl)
        //    .then(response => response.json())
        //    .then(json => {
        //        console.log(json)
        //    }).catch(err => console.log(err))
        //}

        const getScore = () => {
            return fetch(scoreUrl)
            .then(response => response.json())
            .then((json) => {
                
                score.innerHTML = json["score"];
                return json;
            })
        }
    </script>
}
